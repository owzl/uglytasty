<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="recipeMapper">


	<resultMap id="recipeResult" type="Recipe">
		<result column="recipe_no" property="recipeNo"/>
		<result column="recipe_writer" property="recipeWriter"/>
		<result column="recipe_title" property="recipeTitle"/>
		<result column="recipe_origin_name" property="recipeOriginName"/>
		<result column="recipe_change_name" property="recipeChangeName"/>
		<result column="recipe_exp" property="recipeExplanation"/>
		<result column="recipe_content" property="recipeContent"/>
		<result column="count" property="count"/>
		<result column="difficulty" property="difficulty"/>
		<result column="time" property="time"/>
		<result column="recipe_date" property="recipeDate"/>
		<result column="status" property="status"/>
	</resultMap>
	
	
	<resultMap id="ingredientsResult" type="Ingredients">
		<result column="recipe_no" property="recipeNo"/>
		<result column="servings" property="servings"/>
		<result column="ingredient" property="ingredient"/>
		<result column="quantity" property="quantity"/>
		<result column="seasoning" property="seasoning"/>
		<result column="amount" property="amount"/>
	</resultMap>
	
	
	<resultMap id="replyResult" type="Reply">
		<result column="reply_no" property="replyNo"/>	
		<result column="recipe_no" property="refRecipeNo"/>	
		<result column="user_id" property="userId"/>	
		<result column="reply_content" property="replyContent"/>	
		<result column="reply_date" property="replyDate"/>	
		<result column="status" property="status"/>	
	</resultMap>
	
	<resultMap id="likedResult" type="Liked">
		<result column="user_id" property="userId"/>
		<result column="recipe_no" property="recipeNo"/>
	</resultMap>



	<select id="selectListCount" resultType="_int">
		select
				count(*)
		  from  recipe
		 where  status = 'Y' 		
	</select>
	
	
	<select id="selectList" resultMap="recipeResult">
		select
		        recipe_no
		      , recipe_writer
		      , recipe_title
		      , recipe_origin_name
		      , recipe_change_name
		      , recipe_exp
		      , recipe_content
		      , count
		      , difficulty
		      , time
		      , recipe_date
		      , status
		  from  recipe
		 where  status = 'Y'
		 order
		    by  recipe_no desc
	</select>
		
		
	<select id="selectListViewDesc" resultMap="recipeResult">
		select
		        recipe_no
		      , recipe_writer
		      , recipe_title
		      , recipe_origin_name
		      , recipe_change_name
		      , recipe_exp
		      , recipe_content
		      , count
		      , difficulty
		      , time
		      , recipe_date
		      , status
		  from  recipe
		 where  status = 'Y'
		 order
		    by  count desc
	</select>
  
  
	<update id="increaseCount">
		update
				recipe
		   set  count = count + 1
		 where  recipe_no = #{recipeNo}
		   and  status = 'Y'	
	</update>
	
	
	<select id="selectSearchRecipeListCount" resultType="_int">
		select 
				count(*)
		   from recipe
		  where status = 'Y'
		    and (recipe_title like '%' || #{keyword} || '%' or recipe_exp like '%' || #{keyword} || '%' or recipe_content like '%' || #{keyword} || '%')
	</select>
	
	
	<select id="selectSearchRecipeList" resultMap="recipeResult">
		select
			    recipe_no
		      , recipe_writer
		      , recipe_title
		      , recipe_origin_name
		      , recipe_change_name
		      , recipe_exp
		      , recipe_content
		      , count
		      , difficulty
		      , time
		      , recipe_date
		      , status
		  from  recipe
		 where  status = 'Y'
		   and  (recipe_title like '%' || #{keyword} || '%' or recipe_exp like '%' || #{keyword} || '%' or recipe_content like '%' || #{keyword} || '%')
		 order
		    by  recipe_no desc   	
	
	</select>
	
	
	<select id="selectRecipe" resultMap="recipeResult">
		select
		        recipe_no
		      , recipe_writer  
		      , recipe_title
		      , recipe_origin_name
		      , recipe_change_name
		      , recipe_exp
		      , recipe_content
		      , count
		      , difficulty
		      , time
		      , to_char(recipe_date, 'YYYY-MM-DD') as "recipe_date"
		      , status
		  from  recipe
		 where  recipe_no = #{recipeNo} 
	</select>
	
	
	<select id="selectIngredients" resultMap="ingredientsResult">
		select
		        recipe_no
		      , servings
		      , ingredient
		      , quantity
		      , seasoning
		      , amount
		  from  ingredients
		 where  recipe_no = #{ recipeNo } 
	</select>
	
	
	<select id="likeCount" resultType="_int">
		select
		        count(*)
		  from  liked
		 where  recipe_no = #{ recipeNo } 
	</select>
	
	<select id="checkIfUserLiked" resultType="_int">
		select
				count(*)
		  from  liked
		 where  recipe_no = #{ recipeNo }
		   and  
	</select>
	
	
	<insert id="insertRecipe">
		insert
		  into recipe
		  (
		    recipe_no
		  , recipe_writer  
		  , recipe_title
		  , recipe_origin_name
		  , recipe_change_name
		  , recipe_exp
		  , recipe_content
		  , difficulty
		  , time
		  )
		  values
		  (
		    seq_recipe_no.nextval
		  , #{ recipeWriter }  
		  , #{ recipeTitle }
		  , #{ recipeOriginName }
		  , #{ recipeChangeName }
		  , #{ recipeExplanation }
		  , #{ recipeContent }
		  , #{ difficulty }
		  , #{ time }  
		  )		
	</insert>
	
	<insert id="insertIngredients">
		insert
		  into ingredients
		  (
		    recipe_no
		  , servings
		  , ingredient
		  , quantity
		  , seasoning
		  , amount  
		  )
		  values
		  (
		    seq_recipe_no.currval
		  , #{ servings }
		  , #{ ingredient }
		  , #{ quantity }
		  , #{ seasoning }
		  , #{ amount }  
		  )
	</insert>
	
	
	<update id="deleteRecipe">
		update
				recipe
		   set  status = 'N'
		 where  recipe_no = #{ recipeNo }  		
	</update>
	
	
	<select id="selectReplyList" resultMap="replyResult">
		select
				reply_no
			  , recipe_no
			  , user_id
			  , reply_content
			  , to_char(reply_date, 'YYYY-MM-DD') as "reply_date"
			  , status
		  from  reply
		 where  status = 'Y'
		   and  recipe_no = #{ recipeNo }
		 order
		    by  reply_no 
	</select>
	
	
	<insert id="insertReply">
		insert
		  into reply
		  (
		  	reply_no
		  , recipe_no
		  , user_id
		  , reply_content
		  , reply_date
		  , status
		  )
		  values
		  (
		  	seq_reply_no.nextval
		  , #{ refRecipeNo }
		  , #{ userId }
		  , #{ replyContent }
		  , default
		  , default		
		  )
	</insert>
	
	
	<update id="deleteReply">
		update
				reply
		   set  status = 'N'
		 where  reply_no = #{ replyNo }  		
		
	
	</update>
	
	
	<update id="updateRecipe">
		update
				recipe
		   set  recipe_title = #{ recipeTitle }
		   	  , recipe_writer = #{ recipeWriter }
		      , recipe_origin_name = #{ recipeOriginName }
		      , recipe_change_name = #{ recipeChangeName }
		      , recipe_exp = #{ recipeExplanation }
		      , recipe_content = #{ recipeContent }
		      , difficulty = #{ difficulty }
		      , time = #{ time }
		      , recipe_date = default
		 where  recipe_no = #{ recipeNo }       		
	</update>
	
	
	<update id="updateIngredients">
		update
				ingredients
		   set  servings = #{ servings }
		   	  , ingredient = #{ ingredient }
		   	  , quantity = #{ quantity }
		   	  , seasoning = #{ seasoning }
		   	  , amount = #{ amount }
		 where  recipe_no = #{ recipeNo }  	  	
	</update>
	
	
	<select id="checkLike" resultMap="likedResult">
		select
				user_id
			  , recipe_no
		  from  liked
		 where  user_id = #{ userId }
		   and  recipe_no = #{ recipeNo } 	  	
	</select>
	
	
	<insert id="insertLike">
		insert
		  into	liked
		  (
		  	recipe_no
		  , user_id	
		  )
		  values
		  (
		  	#{recipeNo}
		  , #{userId}	
		  )
	</insert>
	
	
	<delete id="deleteLike">
		delete
		  from	liked
		 where  recipe_no = #{ recipeNo }
		   and  user_id = #{ userId } 
	</delete>
	
	
	<select id="sendLikeData" resultMap="likedResult">
		select
				user_id
			  , recipe_no
		  from  liked
	</select>
	
	

</mapper>
