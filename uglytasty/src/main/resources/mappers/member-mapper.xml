<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap type="Member" id="memberResult"> 
		<result column="user_id" property="userId" />
		<result column="user_pwd" property="userPwd" />
		<result column="user_name" property="userName" />
		<result column="phone" property="phone" />
		<result column="email" property="email" />
		<result column="address_base" property="addressBase" />
		<result column="address_detail" property="addressDetail" />
		<result column="status" property="status" />
		<result column="subscribe" property="subscribe" />
		<result column="provider" property="provider"/>
		<result column="access_token" property="accessToken"/>
		<result column="refresh_token" property="refreshToken"/>
	</resultMap>


	<resultMap type="Product" id="productResult">
		<result column="product_no" property="productNo" />
		<result column="product_name" property="productName" />
		<result column="stock" property="stock" />
	</resultMap>
	
	
	
	
	<!-- 비밀번호 암호화 후 로그인 -->
	<!-- (user_pwd 조건 삭제 / 비교는 Controller에서 .matches 메소드로 할것) -->
	<select id="loginMember" resultMap="memberResult">
		select
				user_id
			  , user_pwd
			  , user_name
			  , phone
			  , email
			  , address_base
			  , address_detail
			  , status
			  , subscribe
			  , provider
			  , access_token
			  , refresh_token
		from  member
		where status = 'Y'
		  and user_id = #{userId}
	</select>
	
	<!-- 재고량 0 인 상품 조회 (select) - 관리자알림용 -->
	<select id="selectProductStockList" resultMap="productResult">
		select
		        product_no 
		      , product_name
		      , stock
		  from 	product
		 where 	status = 'Y'
		   and 	stock = 0
	</select>
	
	
	<!-- 회원가입 -->
	<insert id="insertMember">
	insert
	  into member
		(
		user_id
		, user_pwd
		, user_name
		, phone
		, email
		, address_base
		, address_detail
		, status
		, subscribe
		, provider
		, access_token
		, refresh_token
		)
	values
		(
		#{userId}
		, #{userPwd}
		, #{userName}
		, #{phone}
		, #{email}
		, #{addressBase}
		, #{addressDetail}
		, default
		, default
		, #{provider}
		, #{accessToken}
		, #{refreshToken}
		)
	</insert>
	
	
	<!-- 아이디 중복체크 -->
	<select id="idCheck" resultType="_int">
		select
				count(*)
		  from 	member
		 where  user_id = #{checkId}
	</select>
	
	
	<select id="checkMemberByGoogle" resultMap="memberResult">
		select
		        user_id
		      , user_pwd
		      , user_name
		      , phone
		      , email
		      , address_base
		      , address_detail
		      , status
		      , subscribe
		      , provider
		      , access_token
		      , refresh_token
		  from  member
		 where status = 'Y'
		   and user_id = #{userId}
	</select>
	
	<!-- 회원탈퇴 -->
	<update id="deleteMember">
		update
				member
		   set  status = 'N'
		 where  user_id = #{userId}  	
	</update>
	
	
	<!-- 회원정보 수정 -->
	<update id="updateMember">
		update
				member
		   set  user_name = #{ userName }
			  , email = #{ email }
			  , phone = #{ phone }
			  , address_base = #{ addressBase }
			  , address_detail = #{ addressDetail }
		 where  user_id = #{ userId }	  
	</update>
	
	
	<!-- 비밀번호 변경 -->
	<update id="updatePwd">
		update
				member
		   set  user_pwd = #{ userPwd }		
		 where  user_id = #{ userId }		
	</update>



</mapper>